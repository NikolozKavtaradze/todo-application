@using todo_domain_entities.AggregateModels
@model IEnumerable<ToDoItem>
@{
    ViewData["Title"] = "Index";
}

<div class="row mt-5 @(ViewBag.ListIsPresent ? "" : "d-none")">
    <div class="col-md-2">
        <form asp-action="Filter" method="post">
            <div class="mb-3">
                <label class="col-form-label">Category:</label>
                <select name="filter" class="form-control" asp-items="@(new SelectList(ViewBag.Categories, "CategoryId","Name",ViewBag.Filters.CategoryId))"> 
                <option value="all">All</option>
                </select>
            </div>
        <div class="mb-3">
            <label class="col-form-label">Due:</label>
            <select name="filter" class="form-control" asp-items="@(new SelectList(ViewBag.DueFilters,"Key","Value",ViewBag.Filters.Due))">
             <option value="all">All</option>
            </select>
        </div>
        <div class="mb-3">
            <label class="col-form-label">Status:</label>
            <select name="filter" class="form-control" asp-items="@(new SelectList(ViewBag.Statuses,"StatusId","Name",ViewBag.Filters.StatusId))">
             <option value="all">All</option>
            </select>
        </div>
        <button type="submit" class="btn btn-primary">Filter</button>
        <a asp-action="Index" asp-route-id="@(SelectedList.Id)" class="btn btn-secondary">Clear</a>
        </form>
    </div>

    <div class="col-md-10">
        <form asp-action="MarkComplete" method="post" asp-route-filterid="@ViewBag.Filters.Filterstring">
            <table class="table table-bordered table-striped mt-2">
                <thead>
                    <tr>
                        <th>Description</th>
                        <th>Category</th>
                        <th>Due Date</th>
                        <th>Status</th>
                        <th class="w-25"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (ToDoItem task in Model)
                    {
                        string overdue = task.Overdue ? "bg-warning" : "";
                        <tr>
                            <td>@task.Description</td>
                            <td>@task.Category.Name</td>
                            <td class="@overdue">@task.DueDate?.ToString("g")</td>
                            <td class="@overdue">@task.Status.Name</td>
                            <td>
                                @if(task.StatusId == "ongoing")
                                {
                                    <button type="submit" class="btn btn-primary btn-sm" name="@nameof(ToDoItem.Id)" value="@task.Id">Mark Completed</button>
                                }
                                <a class="btn btn-outline-warning btn-sm" asp-action="EditTask" asp-route-id="@task.Id">Edit</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </form>
        <form asp-action="DeleteComplete" method="post" asp-route-filterid="@ViewBag.Filters.Filterstring">
            <a asp-action="AddTask" class="btn btn-primary">Add new task</a>
            <button type="submit" class="btn btn-danger">Delete completed tasks</button>
        </form>
    </div>
</div>
